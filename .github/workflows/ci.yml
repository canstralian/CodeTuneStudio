name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Python ${{ matrix.python-version }}

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install pip, pip-tools, and wheel (latest secure versions)
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade "pip-tools>=7.0.0" wheel

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Compile dependencies (if requirements.in exists)
        run: |
          if [ -f requirements.in ]; then pip-compile requirements.in; fi

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python -m unittest discover -s tests -v

      - name: Run linting
        run: |
          pip install flake8
          # Critical errors only
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,migrations
          # Full check (non-blocking)
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --exclude=venv,migrations
